{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{30,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Путь",1,0,
{1,0},
{1,0},
{2,
{1},
{0,47d237f4-ad7f-4397-9873-e5a27f8047ba}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{3,0,
{0},"",-1,-1,1,0},
{3,0,
{0},"",-1,-1,1,0},
{3,4,
{0}
},
{6,3,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{26,
{1,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{3,0,
{0},"",-1,-1,1,0},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{6,3,0,1},1,
{3,0,0},0},
{0},1,
{17,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ПутьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{1,1},0,1},1,
{"Pattern"},
{"Pattern"},"","",
{0},0},"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"&НаКлиенте
Перем Ядро;

&НаКлиенте
Процедура УстановитьЯдро(НовоеЯдро) Экспорт
	Ядро = НовоеЯдро;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЯдро() Экспорт
	Возврат Ядро;
КонецФункции

&НаКлиенте
Функция ОписаниеПлагина() Экспорт
	Результат = Новый Структура;
	Результат.Вставить(""Тип"", Ядро.ТипыПлагинов().Загрузчик);
	Результат.Вставить(""Идентификатор"", ""ЗагрузчикФайла"");
	Результат.Вставить(""Представление"", ""Загрузить тесты из файловой системы"");
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура УстановитьПуть(Путь) Экспорт
	Объект.Путь = Путь;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПуть() Экспорт
	Возврат Объект.Путь;
КонецФункции

&НаКлиенте
Функция ВыбратьПутьИнтерактивно() Экспорт
	ДиалогВыбораТеста = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораТеста.Фильтр = ""Обработка-тест (*.epf)|*.epf|Все файлы|*"";
	ДиалогВыбораТеста.МножественныйВыбор = Истина;
	ДиалогВыбораТеста.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораТеста.Каталог = ПолучитьПуть();
	
	Результат = Новый ТекстовыйДокумент;
	Если ДиалогВыбораТеста.Выбрать() Тогда
		Для каждого ПолноеИмяФайла Из ДиалогВыбораТеста.ВыбранныеФайлы Цикл
			Результат.ДобавитьСтроку(ПолноеИмяФайла);
		КонецЦикла;		
	КонецЕсли;
	Текст = Результат.ПолучитьТекст();
	
	Возврат Лев(Текст, СтрДлина(Текст) - 1);
КонецФункции

&НаКлиенте
Функция Загрузить() Экспорт
	ДеревоТестов = Ядро.НовоеДеревоТестов();
	СтрокаПутей = ПолучитьПуть();
	Для Сч = 1 По СтрЧислоСтрок(СтрокаПутей) Цикл
		ФайлОбработки = Новый Файл(СтрПолучитьСтроку(СтрокаПутей, Сч));
		Если Не ФайлОбработки.Существует() Тогда
			ВызватьИсключение ""Не существует файл тестов для загрузки <"" + ФайлОбработки.ПолноеИмя + "">"";
		КонецЕсли;
		Если ФайлОбработки.ЭтоКаталог() Тогда
			ВызватьИсключение ""Для загрузки передан каталог вместо файла <"" + ФайлОбработки.ПолноеИмя + "">"";
		КонецЕсли;
		
		АдресХранилища = """";
		ПоместитьФайл(АдресХранилища, ФайлОбработки.ПолноеИмя, , Ложь, ЭтаФорма.УникальныйИдентификатор);
		ПодключитьФайлОбработкиНаСервере(АдресХранилища, ФайлОбработки.ИмяБезРасширения);
		ЗагрузитьФайл_Клиент(ДеревоТестов, ФайлОбработки);
		ЗагрузитьФайл_Сервер(ДеревоТестов, ФайлОбработки);
	КонецЦикла; 
	
	Возврат ДеревоТестов;
КонецФункции

&НаСервереБезКонтекста
Процедура ПодключитьФайлОбработкиНаСервере(АдресХранилища, ИдентификаторОбработки)
	ВнешниеОбработки.Подключить(АдресХранилища, ИдентификаторОбработки, Ложь);
КонецПроцедуры

&НаКлиенте
Функция ЗагрузитьФайл_Клиент(ДеревоТестов, ФайлОбработки)
	ФормаОбработки = ПолучитьФорму(""ВнешняяОбработка."" + ФайлОбработки.ИмяБезРасширения + "".Форма"");
	Попытка
		СписокТестов = ФормаОбработки.ПолучитьСписокТестов(Ядро);
	Исключение
		// TODO добавить обработку ошибок
		Описание = ОписаниеОшибки();
		Сообщить(Описание);
	КонецПопытки;
	
	Контейнер = Ядро.ДобавитьКонтейнерВДеревоТестов(ДеревоТестов, ФайлОбработки.ИмяБезРасширения);
	Для каждого ИмяТеста Из СписокТестов Цикл
		Ядро.ДобавитьЭлементВКонтейнер(Контейнер, ФайлОбработки.ПолноеИмя, ИмяТеста);
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции

&НаСервере
Функция ЗагрузитьФайл_Сервер(ДеревоТестов, ФайлОбработки)
	Ядро = ВнешниеОбработки.Создать(""xddTestRunner"");
	Попытка
		Обработка = ВнешниеОбработки.Создать(ФайлОбработки.ИмяБезРасширения);
		СписокТестов = Обработка.ПолучитьСписокТестов(Ядро);
	Исключение
		// TODO добавить обработку ошибок
		Описание = ОписаниеОшибки();
		Сообщить(Описание);
		Возврат Неопределено;
	КонецПопытки;
	Контейнер = Ядро.ДобавитьКонтейнерВДеревоТестов(ДеревоТестов, ФайлОбработки.ИмяБезРасширения);
	Для каждого ИмяТеста Из СписокТестов Цикл
		Ядро.ДобавитьЭлементВКонтейнер(Контейнер, ФайлОбработки.ПолноеИмя, ИмяТеста);
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",5cce5f28-d8c9-48d6-9f87-928be46d5662}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}