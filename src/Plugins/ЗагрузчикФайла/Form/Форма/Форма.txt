&НаКлиенте
Перем Ядро;

&НаКлиенте
Процедура УстановитьЯдро(НовоеЯдро) Экспорт
	Ядро = НовоеЯдро;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЯдро() Экспорт
	Возврат Ядро;
КонецФункции

&НаКлиенте
Функция ОписаниеПлагина() Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Тип", Ядро.ТипыПлагинов().Загрузчик);
	Результат.Вставить("Идентификатор", "ЗагрузчикФайла");
	Результат.Вставить("Представление", "Загрузить тесты из файловой системы");
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура УстановитьПуть(Путь) Экспорт
	Объект.Путь = Путь;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПуть() Экспорт
	Возврат Объект.Путь;
КонецФункции

&НаКлиенте
Функция ВыбратьПутьИнтерактивно() Экспорт
	ДиалогВыбораТеста = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораТеста.Фильтр = "Обработка-тест (*.epf)|*.epf|Все файлы|*";
	ДиалогВыбораТеста.МножественныйВыбор = Истина;
	ДиалогВыбораТеста.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораТеста.Каталог = ПолучитьПуть();
	
	Результат = Новый ТекстовыйДокумент;
	Если ДиалогВыбораТеста.Выбрать() Тогда
		Для каждого ПолноеИмяФайла Из ДиалогВыбораТеста.ВыбранныеФайлы Цикл
			Результат.ДобавитьСтроку(ПолноеИмяФайла);
		КонецЦикла;		
	КонецЕсли;
	Текст = Результат.ПолучитьТекст();
	
	Возврат Лев(Текст, СтрДлина(Текст) - 1);
КонецФункции

&НаКлиенте
Функция Загрузить() Экспорт
	ДеревоТестов = Ядро.НовоеДеревоТестов();
	СтрокаПутей = ПолучитьПуть();
	Для Сч = 1 По СтрЧислоСтрок(СтрокаПутей) Цикл
		ФайлОбработки = Новый Файл(СтрПолучитьСтроку(СтрокаПутей, Сч));
		Если Не ФайлОбработки.Существует() Тогда
			ВызватьИсключение "Не существует файл тестов для загрузки <" + ФайлОбработки.ПолноеИмя + ">";
		КонецЕсли;
		Если ФайлОбработки.ЭтоКаталог() Тогда
			ВызватьИсключение "Для загрузки передан каталог вместо файла <" + ФайлОбработки.ПолноеИмя + ">";
		КонецЕсли;
		
		АдресХранилища = "";
		ПоместитьФайл(АдресХранилища, ФайлОбработки.ПолноеИмя, , Ложь, ЭтаФорма.УникальныйИдентификатор);
		ПодключитьФайлОбработкиНаСервере(АдресХранилища, ФайлОбработки.ИмяБезРасширения);
		ЗагрузитьФайл_Клиент(ДеревоТестов, ФайлОбработки);
		ЗагрузитьФайл_Сервер(ДеревоТестов, ФайлОбработки);
	КонецЦикла; 
	
	Возврат ДеревоТестов;
КонецФункции

&НаСервереБезКонтекста
Процедура ПодключитьФайлОбработкиНаСервере(АдресХранилища, ИдентификаторОбработки)
	ВнешниеОбработки.Подключить(АдресХранилища, ИдентификаторОбработки, Ложь);
КонецПроцедуры

&НаКлиенте
Функция ЗагрузитьФайл_Клиент(ДеревоТестов, ФайлОбработки)
	ФормаОбработки = ПолучитьФорму("ВнешняяОбработка." + ФайлОбработки.ИмяБезРасширения + ".Форма");
	Попытка
		СписокТестов = ФормаОбработки.ПолучитьСписокТестов(Ядро);
	Исключение
		// TODO добавить обработку ошибок
		Описание = ОписаниеОшибки();
		Сообщить(Описание);
	КонецПопытки;
	
	Контейнер = Ядро.ДобавитьКонтейнерВДеревоТестов(ДеревоТестов, ФайлОбработки.ИмяБезРасширения);
	Для каждого ИмяТеста Из СписокТестов Цикл
		Ядро.ДобавитьЭлементВКонтейнер(Контейнер, ФайлОбработки.ПолноеИмя, ИмяТеста);
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции

&НаСервере
Функция ЗагрузитьФайл_Сервер(ДеревоТестов, ФайлОбработки)
	Ядро = ВнешниеОбработки.Создать("xddTestRunner");
	Попытка
		Обработка = ВнешниеОбработки.Создать(ФайлОбработки.ИмяБезРасширения);
		СписокТестов = Обработка.ПолучитьСписокТестов(Ядро);
	Исключение
		// TODO добавить обработку ошибок
		Описание = ОписаниеОшибки();
		Сообщить(Описание);
		Возврат Неопределено;
	КонецПопытки;
	Контейнер = Ядро.ДобавитьКонтейнерВДеревоТестов(ДеревоТестов, ФайлОбработки.ИмяБезРасширения);
	Для каждого ИмяТеста Из СписокТестов Цикл
		Ядро.ДобавитьЭлементВКонтейнер(Контейнер, ФайлОбработки.ПолноеИмя, ИмяТеста);
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции