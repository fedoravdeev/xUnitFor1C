&НаКлиенте
Перем юТест;
&НаКлиенте
Перем Утверждения;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	юТест = ЮнитТестирование;
	Утверждения = юТест;
	
	ВсеТесты = Новый Массив;
	// Core
	ВсеТесты.Добавить("ТестДолжен_ПолучитьСписокЗагруженныхПлагиновПоТипу");
	// Plugin interface
	ВсеТесты.Добавить("ТестДолжен_ПроверитьОписаниеПлагина");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьПолучениеПлагинаПоИдентификатору");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьУстановкуЯдра");
	
	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

// { Core
&НаКлиенте
Процедура ТестДолжен_ПолучитьСписокЗагруженныхПлагиновПоТипу() Экспорт
	Загрузчики = юТест.ПолучитьИдентификаторыПлагиновПоТипу(юТест.ТипыПлагинов().Загрузчик);
	
	Утверждения.ПроверитьТип(Загрузчики, "Массив", "Загрузчики");
	Утверждения.ПроверитьБольше(Загрузчики.Количество(), 0, "Загрузчики.Количество()");
	Для каждого ИдентификаторЗагрузчика Из Загрузчики Цикл
		ЗагрузчикТестов = юТест.Плагин(ИдентификаторЗагрузчика);
		ОписаниеПлагина = ЗагрузчикТестов.ОписаниеПлагина();
		Утверждения.ПроверитьРавенство(ОписаниеПлагина.Тип, юТест.ТипыПлагинов().Загрузчик, "ОписаниеПлагина.Тип, юТест.ТипыПлагинов().Загрузчик");
		Утверждения.ПроверитьЗаполненность(ОписаниеПлагина.Идентификатор, "ОписаниеПлагина.Идентификатор");
		Утверждения.ПроверитьЗаполненность(ОписаниеПлагина.Представление, "ОписаниеПлагина.Представление");
	КонецЦикла;
	
	ЗагрузчикПоУмолчанию = юТест.ЗагрузчикПоУмолчанию();
	ИндексЗагрузчика = Загрузчики.Найти(ЗагрузчикПоУмолчанию.ОписаниеПлагина().Идентификатор);
	Утверждения.ПроверитьНеРавенство(ИндексЗагрузчика, Неопределено, "ИндексЗагрузчика");
КонецПроцедуры
// } Core

// { Plugin interface
&НаКлиенте
Процедура ТестДолжен_ПроверитьОписаниеПлагина() Экспорт
	ЗагрузчикТестов = юТест.ЗагрузчикПоУмолчанию();
	ОписаниеПлагина = ЗагрузчикТестов.ОписаниеПлагина();
	Утверждения.ПроверитьРавенство(ОписаниеПлагина.Тип, юТест.ТипыПлагинов().Загрузчик, "ОписаниеПлагина.Тип, юТест.ТипыПлагинов().Загрузчик");
	Утверждения.ПроверитьРавенство(ОписаниеПлагина.Идентификатор, "ЗагрузчикФайла", "ОписаниеПлагина.Идентификатор");
	Утверждения.ПроверитьРавенство(ОписаниеПлагина.Представление, "Загрузить тесты из файловой системы", "ОписаниеПлагина.Представление");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьПолучениеПлагинаПоИдентификатору() Экспорт
	ЗагрузчикТестов = юТест.Плагин("ЗагрузчикФайла");
	ОписаниеПлагина = ЗагрузчикТестов.ОписаниеПлагина();
	Утверждения.ПроверитьРавенство(ОписаниеПлагина.Тип, юТест.ТипыПлагинов().Загрузчик, "ОписаниеПлагина.Тип, юТест.ТипыПлагинов().Загрузчик");
	Утверждения.ПроверитьРавенство(ОписаниеПлагина.Идентификатор, "ЗагрузчикФайла", "ОписаниеПлагина.Идентификатор");
	Утверждения.ПроверитьРавенство(ОписаниеПлагина.Представление, "Загрузить тесты из файловой системы", "ОписаниеПлагина.Представление");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьУстановкуЯдра() Экспорт
	ЗагрузчикТестов = юТест.Плагин("ЗагрузчикФайла");
	Ядро = ЗагрузчикТестов.ПолучитьЯдро();
	Утверждения.ПроверитьРавенство(Ядро, юТест, "Ядро = юТест");
КонецПроцедуры
// } Plugin interface