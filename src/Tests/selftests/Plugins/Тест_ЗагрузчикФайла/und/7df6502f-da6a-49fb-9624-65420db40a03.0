{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"&НаКлиенте
Перем юТест;
&НаКлиенте
Перем Утверждения;
&НаКлиенте
Перем ЗагрузчикФайла;
&НаКлиенте
Перем ВременныеФайлы;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	юТест = ЮнитТестирование;
	Утверждения = юТест;
	
	ВсеТесты = Новый Массив;
	// Loader interface
	ВсеТесты.Добавить(""ТестДолжен_Загрузить_ОдинФайл"");
	ВсеТесты.Добавить(""ТестДолжен_Загрузить_ДваФайла"");
	
	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередЗапускомТеста() Экспорт
	ВременныеФайлы = Новый Массив;
	ЗагрузчикФайла = юТест.Плагин(""ЗагрузчикФайла"");
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаТеста() Экспорт
	ЗагрузчикФайла = Неопределено;
	УдалитьВременныеФайлы();
КонецПроцедуры

// { Helpers
&НаКлиенте
Функция НовыйВременныйФайл(Расширение) Экспорт
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ВременныйФайл = Новый Файл(ИмяВременногоФайла);
	ВременныеФайлы.Добавить(ВременныйФайл);
	
	Возврат ВременныйФайл;
КонецФункции

&НаКлиенте
Процедура УдалитьВременныеФайлы()
	Для каждого ВременныйФайл Из ВременныеФайлы Цикл
		Попытка
			УдалитьФайлы(ВременныйФайл.ПолноеИмя);
		Исключение
			Сообщить(""Не удален временный файл: "" + ВременныйФайл.ПолноеИмя + ""
			|-"" + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	ВременныеФайлы.Очистить();
КонецПроцедуры
// } Helpers

// { Loader interface
&НаКлиенте
Процедура ТестДолжен_Загрузить_ОдинФайл() Экспорт
	ФайлСТестами = НовыйВременныйФайл("".epf"");
	ПолучитьМакет_НаСервере(""ТестовыйНаборДляЗагрузчикаФС"").Записать(ФайлСТестами.ПолноеИмя);
	
	ДеревоТестов = ЗагрузчикФайла.Загрузить(ФайлСТестами.ПолноеИмя);
	
	Утверждения.ПроверитьТип(ДеревоТестов, ""Массив"", ""ДеревоТестов"");
	Утверждения.ПроверитьРавенство(ДеревоТестов.Количество(), 1, ""Узлы верхнего уровня"");
	Контейнер = ДеревоТестов[0];
	ПроверитьКонтейнер(Контейнер, ФайлСТестами);
КонецПроцедуры

&НаСервере
Функция ПолучитьМакет_НаСервере(ИмяМакета)
	ЭтотОбъект = РеквизитФормыВЗначение(""Объект"");
	Макет = ЭтотОбъект.ПолучитьМакет(""ТестовыйНаборДляЗагрузчикаФС"");
	
	Возврат Макет;
КонецФункции

&НаКлиенте
Процедура ПроверитьКонтейнер(Контейнер, ФайлСТестами)
	Утверждения.ПроверитьРавенство(Контейнер.Тип, юТест.ТипыУзловДереваТестов().Контейнер, ""Контейнер.Тип"");
	Утверждения.ПроверитьРавенство(Контейнер.Имя, ФайлСТестами.ИмяБезРасширения, ""Контейнер.Имя"");
	Утверждения.ПроверитьТип(Контейнер.Строки, ""Массив"", ""Контейнер.Строки"");
	Утверждения.ПроверитьРавенство(Контейнер.Строки.Количество(), 3, ""Контейнер.Строки.Количество()"");
	
	Элемент1 = Контейнер.Строки[0];
	Утверждения.ПроверитьРавенство(Элемент1.Тип, юТест.ТипыУзловДереваТестов().Элемент, ""Элемент1.Тип"");
	Утверждения.ПроверитьРавенство(Элемент1.Путь, ФайлСТестами.ПолноеИмя, ""Элемент1.Путь"");
	Утверждения.ПроверитьРавенство(Элемент1.ИмяТеста, ""УспешныйТест"", ""Элемент1.ИмяТеста"");
	
	Элемент3 = Контейнер.Строки[2];
	Утверждения.ПроверитьРавенство(Элемент3.Тип, юТест.ТипыУзловДереваТестов().Элемент, ""Элемент3.Тип"");
	Утверждения.ПроверитьРавенство(Элемент3.Путь, ФайлСТестами.ПолноеИмя, ""Элемент3.Путь"");
	Утверждения.ПроверитьРавенство(Элемент3.ИмяТеста, ""НесуществующийТест"", ""Элемент3.ИмяТеста"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_Загрузить_ДваФайла() Экспорт
	ФайлСТестами1 = НовыйВременныйФайл("".epf"");
	ПолучитьМакет_НаСервере(""ТестовыйНаборДляЗагрузчикаФС"").Записать(ФайлСТестами1.ПолноеИмя);
	
	ФайлСТестами2 = НовыйВременныйФайл("".epf"");
	ПолучитьМакет_НаСервере(""ТестовыйНаборДляЗагрузчикаФС"").Записать(ФайлСТестами2.ПолноеИмя);
	
	ПутьКНесколькимФайлам = ФайлСТестами1.ПолноеИмя + Символы.ПС + ФайлСТестами2.ПолноеИмя;
	
	ДеревоТестов = ЗагрузчикФайла.Загрузить(ПутьКНесколькимФайлам);
	
	Утверждения.ПроверитьТип(ДеревоТестов, ""Массив"", ""ДеревоТестов"");
	Утверждения.ПроверитьРавенство(ДеревоТестов.Количество(), 2, ""Узлы верхнего уровня"");
	
	Контейнер = ДеревоТестов[0];
	ПроверитьКонтейнер(Контейнер, ФайлСТестами1);
	
	Контейнер = ДеревоТестов[1];
	ПроверитьКонтейнер(Контейнер, ФайлСТестами2);
КонецПроцедуры
// } Loader interface
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",cd570446-fb13-4855-bb0e-5695a8e88940}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}